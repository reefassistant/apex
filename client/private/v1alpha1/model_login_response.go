/*
Apex Private API

Private (authenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"
)

// LoginResponse struct for LoginResponse
type LoginResponse struct {
	ConnectSid string `json:"connect.sid"`
}

// NewLoginResponse instantiates a new LoginResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginResponse(connectSid string) *LoginResponse {
	this := LoginResponse{}
	this.ConnectSid = connectSid
	return &this
}

// NewLoginResponseWithDefaults instantiates a new LoginResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginResponseWithDefaults() *LoginResponse {
	this := LoginResponse{}
	return &this
}

// GetConnectSid returns the ConnectSid field value
func (o *LoginResponse) GetConnectSid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectSid
}

// GetConnectSidOk returns a tuple with the ConnectSid field value
// and a boolean to check if the value has been set.
func (o *LoginResponse) GetConnectSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectSid, true
}

// SetConnectSid sets field value
func (o *LoginResponse) SetConnectSid(v string) {
	o.ConnectSid = v
}

func (o LoginResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connect.sid"] = o.ConnectSid
	}
	return json.Marshal(toSerialize)
}

type NullableLoginResponse struct {
	value *LoginResponse
	isSet bool
}

func (v NullableLoginResponse) Get() *LoginResponse {
	return v.value
}

func (v *NullableLoginResponse) Set(val *LoginResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginResponse(val *LoginResponse) *NullableLoginResponse {
	return &NullableLoginResponse{value: val, isSet: true}
}

func (v NullableLoginResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
