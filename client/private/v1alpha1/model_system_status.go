/*
Apex Private API

Private (authenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"
)

// SystemStatus struct for SystemStatus
type SystemStatus struct {
	Hostname string                            `json:"hostname"`
	Software string                            `json:"software"`
	Hardware string                            `json:"hardware"`
	Serial   string                            `json:"serial"`
	Type     string                            `json:"type"`
	Extra    map[string]map[string]interface{} `json:"extra"`
	Timezone string                            `json:"timezone"`
	Date     int64                             `json:"date"`
}

// NewSystemStatus instantiates a new SystemStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemStatus(hostname string, software string, hardware string, serial string, type_ string, extra map[string]map[string]interface{}, timezone string, date int64) *SystemStatus {
	this := SystemStatus{}
	this.Hostname = hostname
	this.Software = software
	this.Hardware = hardware
	this.Serial = serial
	this.Type = type_
	this.Extra = extra
	this.Timezone = timezone
	this.Date = date
	return &this
}

// NewSystemStatusWithDefaults instantiates a new SystemStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemStatusWithDefaults() *SystemStatus {
	this := SystemStatus{}
	return &this
}

// GetHostname returns the Hostname field value
func (o *SystemStatus) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *SystemStatus) SetHostname(v string) {
	o.Hostname = v
}

// GetSoftware returns the Software field value
func (o *SystemStatus) GetSoftware() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Software
}

// GetSoftwareOk returns a tuple with the Software field value
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetSoftwareOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Software, true
}

// SetSoftware sets field value
func (o *SystemStatus) SetSoftware(v string) {
	o.Software = v
}

// GetHardware returns the Hardware field value
func (o *SystemStatus) GetHardware() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hardware
}

// GetHardwareOk returns a tuple with the Hardware field value
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetHardwareOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hardware, true
}

// SetHardware sets field value
func (o *SystemStatus) SetHardware(v string) {
	o.Hardware = v
}

// GetSerial returns the Serial field value
func (o *SystemStatus) GetSerial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Serial
}

// GetSerialOk returns a tuple with the Serial field value
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetSerialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Serial, true
}

// SetSerial sets field value
func (o *SystemStatus) SetSerial(v string) {
	o.Serial = v
}

// GetType returns the Type field value
func (o *SystemStatus) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SystemStatus) SetType(v string) {
	o.Type = v
}

// GetExtra returns the Extra field value
func (o *SystemStatus) GetExtra() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Extra
}

// GetExtraOk returns a tuple with the Extra field value
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetExtraOk() (*map[string]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Extra, true
}

// SetExtra sets field value
func (o *SystemStatus) SetExtra(v map[string]map[string]interface{}) {
	o.Extra = v
}

// GetTimezone returns the Timezone field value
func (o *SystemStatus) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *SystemStatus) SetTimezone(v string) {
	o.Timezone = v
}

// GetDate returns the Date field value
func (o *SystemStatus) GetDate() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *SystemStatus) GetDateOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *SystemStatus) SetDate(v int64) {
	o.Date = v
}

func (o SystemStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hostname"] = o.Hostname
	}
	if true {
		toSerialize["software"] = o.Software
	}
	if true {
		toSerialize["hardware"] = o.Hardware
	}
	if true {
		toSerialize["serial"] = o.Serial
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["extra"] = o.Extra
	}
	if true {
		toSerialize["timezone"] = o.Timezone
	}
	if true {
		toSerialize["date"] = o.Date
	}
	return json.Marshal(toSerialize)
}

type NullableSystemStatus struct {
	value *SystemStatus
	isSet bool
}

func (v NullableSystemStatus) Get() *SystemStatus {
	return v.value
}

func (v *NullableSystemStatus) Set(val *SystemStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemStatus(val *SystemStatus) *NullableSystemStatus {
	return &NullableSystemStatus{value: val, isSet: true}
}

func (v NullableSystemStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
