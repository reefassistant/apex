/*
Apex Private API

Private (authenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"
)

// MiscellaneousConfig struct for MiscellaneousConfig
type MiscellaneousConfig struct {
	Reboot       bool      `json:"reboot"`
	AlmSound     string    `json:"almSound"`
	WrnSound     string    `json:"wrnSound"`
	LogInterval  float32   `json:"logInterval"`
	FeedInterval []float32 `json:"feedInterval"`
	PwrMon       bool      `json:"pwrMon"`
}

// NewMiscellaneousConfig instantiates a new MiscellaneousConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMiscellaneousConfig(reboot bool, almSound string, wrnSound string, logInterval float32, feedInterval []float32, pwrMon bool) *MiscellaneousConfig {
	this := MiscellaneousConfig{}
	this.Reboot = reboot
	this.AlmSound = almSound
	this.WrnSound = wrnSound
	this.LogInterval = logInterval
	this.FeedInterval = feedInterval
	this.PwrMon = pwrMon
	return &this
}

// NewMiscellaneousConfigWithDefaults instantiates a new MiscellaneousConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMiscellaneousConfigWithDefaults() *MiscellaneousConfig {
	this := MiscellaneousConfig{}
	return &this
}

// GetReboot returns the Reboot field value
func (o *MiscellaneousConfig) GetReboot() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Reboot
}

// GetRebootOk returns a tuple with the Reboot field value
// and a boolean to check if the value has been set.
func (o *MiscellaneousConfig) GetRebootOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reboot, true
}

// SetReboot sets field value
func (o *MiscellaneousConfig) SetReboot(v bool) {
	o.Reboot = v
}

// GetAlmSound returns the AlmSound field value
func (o *MiscellaneousConfig) GetAlmSound() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlmSound
}

// GetAlmSoundOk returns a tuple with the AlmSound field value
// and a boolean to check if the value has been set.
func (o *MiscellaneousConfig) GetAlmSoundOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlmSound, true
}

// SetAlmSound sets field value
func (o *MiscellaneousConfig) SetAlmSound(v string) {
	o.AlmSound = v
}

// GetWrnSound returns the WrnSound field value
func (o *MiscellaneousConfig) GetWrnSound() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WrnSound
}

// GetWrnSoundOk returns a tuple with the WrnSound field value
// and a boolean to check if the value has been set.
func (o *MiscellaneousConfig) GetWrnSoundOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WrnSound, true
}

// SetWrnSound sets field value
func (o *MiscellaneousConfig) SetWrnSound(v string) {
	o.WrnSound = v
}

// GetLogInterval returns the LogInterval field value
func (o *MiscellaneousConfig) GetLogInterval() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LogInterval
}

// GetLogIntervalOk returns a tuple with the LogInterval field value
// and a boolean to check if the value has been set.
func (o *MiscellaneousConfig) GetLogIntervalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogInterval, true
}

// SetLogInterval sets field value
func (o *MiscellaneousConfig) SetLogInterval(v float32) {
	o.LogInterval = v
}

// GetFeedInterval returns the FeedInterval field value
func (o *MiscellaneousConfig) GetFeedInterval() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.FeedInterval
}

// GetFeedIntervalOk returns a tuple with the FeedInterval field value
// and a boolean to check if the value has been set.
func (o *MiscellaneousConfig) GetFeedIntervalOk() (*[]float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeedInterval, true
}

// SetFeedInterval sets field value
func (o *MiscellaneousConfig) SetFeedInterval(v []float32) {
	o.FeedInterval = v
}

// GetPwrMon returns the PwrMon field value
func (o *MiscellaneousConfig) GetPwrMon() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PwrMon
}

// GetPwrMonOk returns a tuple with the PwrMon field value
// and a boolean to check if the value has been set.
func (o *MiscellaneousConfig) GetPwrMonOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PwrMon, true
}

// SetPwrMon sets field value
func (o *MiscellaneousConfig) SetPwrMon(v bool) {
	o.PwrMon = v
}

func (o MiscellaneousConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["reboot"] = o.Reboot
	}
	if true {
		toSerialize["almSound"] = o.AlmSound
	}
	if true {
		toSerialize["wrnSound"] = o.WrnSound
	}
	if true {
		toSerialize["logInterval"] = o.LogInterval
	}
	if true {
		toSerialize["feedInterval"] = o.FeedInterval
	}
	if true {
		toSerialize["pwrMon"] = o.PwrMon
	}
	return json.Marshal(toSerialize)
}

type NullableMiscellaneousConfig struct {
	value *MiscellaneousConfig
	isSet bool
}

func (v NullableMiscellaneousConfig) Get() *MiscellaneousConfig {
	return v.value
}

func (v *NullableMiscellaneousConfig) Set(val *MiscellaneousConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMiscellaneousConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMiscellaneousConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMiscellaneousConfig(val *MiscellaneousConfig) *NullableMiscellaneousConfig {
	return &NullableMiscellaneousConfig{value: val, isSet: true}
}

func (v NullableMiscellaneousConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMiscellaneousConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
