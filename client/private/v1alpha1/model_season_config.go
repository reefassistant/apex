/*
Apex Private API

Private (authenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"
)

// SeasonConfig struct for SeasonConfig
type SeasonConfig struct {
	Temp     []float32 `json:"temp"`
	Newmoon  []float32 `json:"newmoon"`
	Moonrise []string  `json:"moonrise"`
	Moonset  []string  `json:"moonset"`
	Sunrise  []string  `json:"sunrise"`
	Sunset   []string  `json:"sunset"`
}

// NewSeasonConfig instantiates a new SeasonConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeasonConfig(temp []float32, newmoon []float32, moonrise []string, moonset []string, sunrise []string, sunset []string) *SeasonConfig {
	this := SeasonConfig{}
	this.Temp = temp
	this.Newmoon = newmoon
	this.Moonrise = moonrise
	this.Moonset = moonset
	this.Sunrise = sunrise
	this.Sunset = sunset
	return &this
}

// NewSeasonConfigWithDefaults instantiates a new SeasonConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeasonConfigWithDefaults() *SeasonConfig {
	this := SeasonConfig{}
	return &this
}

// GetTemp returns the Temp field value
func (o *SeasonConfig) GetTemp() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.Temp
}

// GetTempOk returns a tuple with the Temp field value
// and a boolean to check if the value has been set.
func (o *SeasonConfig) GetTempOk() (*[]float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Temp, true
}

// SetTemp sets field value
func (o *SeasonConfig) SetTemp(v []float32) {
	o.Temp = v
}

// GetNewmoon returns the Newmoon field value
func (o *SeasonConfig) GetNewmoon() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}

	return o.Newmoon
}

// GetNewmoonOk returns a tuple with the Newmoon field value
// and a boolean to check if the value has been set.
func (o *SeasonConfig) GetNewmoonOk() (*[]float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Newmoon, true
}

// SetNewmoon sets field value
func (o *SeasonConfig) SetNewmoon(v []float32) {
	o.Newmoon = v
}

// GetMoonrise returns the Moonrise field value
func (o *SeasonConfig) GetMoonrise() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Moonrise
}

// GetMoonriseOk returns a tuple with the Moonrise field value
// and a boolean to check if the value has been set.
func (o *SeasonConfig) GetMoonriseOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Moonrise, true
}

// SetMoonrise sets field value
func (o *SeasonConfig) SetMoonrise(v []string) {
	o.Moonrise = v
}

// GetMoonset returns the Moonset field value
func (o *SeasonConfig) GetMoonset() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Moonset
}

// GetMoonsetOk returns a tuple with the Moonset field value
// and a boolean to check if the value has been set.
func (o *SeasonConfig) GetMoonsetOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Moonset, true
}

// SetMoonset sets field value
func (o *SeasonConfig) SetMoonset(v []string) {
	o.Moonset = v
}

// GetSunrise returns the Sunrise field value
func (o *SeasonConfig) GetSunrise() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Sunrise
}

// GetSunriseOk returns a tuple with the Sunrise field value
// and a boolean to check if the value has been set.
func (o *SeasonConfig) GetSunriseOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sunrise, true
}

// SetSunrise sets field value
func (o *SeasonConfig) SetSunrise(v []string) {
	o.Sunrise = v
}

// GetSunset returns the Sunset field value
func (o *SeasonConfig) GetSunset() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Sunset
}

// GetSunsetOk returns a tuple with the Sunset field value
// and a boolean to check if the value has been set.
func (o *SeasonConfig) GetSunsetOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sunset, true
}

// SetSunset sets field value
func (o *SeasonConfig) SetSunset(v []string) {
	o.Sunset = v
}

func (o SeasonConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["temp"] = o.Temp
	}
	if true {
		toSerialize["newmoon"] = o.Newmoon
	}
	if true {
		toSerialize["moonrise"] = o.Moonrise
	}
	if true {
		toSerialize["moonset"] = o.Moonset
	}
	if true {
		toSerialize["sunrise"] = o.Sunrise
	}
	if true {
		toSerialize["sunset"] = o.Sunset
	}
	return json.Marshal(toSerialize)
}

type NullableSeasonConfig struct {
	value *SeasonConfig
	isSet bool
}

func (v NullableSeasonConfig) Get() *SeasonConfig {
	return v.value
}

func (v *NullableSeasonConfig) Set(val *SeasonConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSeasonConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSeasonConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeasonConfig(val *SeasonConfig) *NullableSeasonConfig {
	return &NullableSeasonConfig{value: val, isSet: true}
}

func (v NullableSeasonConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeasonConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
