/*
Apex Private API

Private (authenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"
)

// NetworkConfig struct for NetworkConfig
type NetworkConfig struct {
	Dhcp           bool     `json:"dhcp"`
	Hostname       string   `json:"hostname"`
	Ipaddr         string   `json:"ipaddr"`
	Netmask        string   `json:"netmask"`
	Gateway        string   `json:"gateway"`
	Dns            []string `json:"dns"`
	HttpPort       float32  `json:"httpPort"`
	User           string   `json:"user"`
	Password       string   `json:"password"`
	DefaultAuth    bool     `json:"defaultAuth"`
	FusionEnable   bool     `json:"fusionEnable"`
	WifiAPLock     bool     `json:"wifiAPLock"`
	WifiEnable     bool     `json:"wifiEnable"`
	Ssid           string   `json:"ssid"`
	WifiAP         bool     `json:"wifiAP"`
	EmailEnable    bool     `json:"emailEnable"`
	SmtpPort       float32  `json:"smtpPort"`
	SmtpServer     string   `json:"smtpServer"`
	EmailFrom      string   `json:"emailFrom"`
	EmailTo        string   `json:"emailTo"`
	ReEmail        float32  `json:"reEmail"`
	EmailAuth      bool     `json:"emailAuth"`
	EmailUser      string   `json:"emailUser"`
	EmailPassword  string   `json:"emailPassword"`
	UpdateFirmware bool     `json:"updateFirmware"`
	LatestFirmware string   `json:"latestFirmware"`
}

// NewNetworkConfig instantiates a new NetworkConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkConfig(dhcp bool, hostname string, ipaddr string, netmask string, gateway string, dns []string, httpPort float32, user string, password string, defaultAuth bool, fusionEnable bool, wifiAPLock bool, wifiEnable bool, ssid string, wifiAP bool, emailEnable bool, smtpPort float32, smtpServer string, emailFrom string, emailTo string, reEmail float32, emailAuth bool, emailUser string, emailPassword string, updateFirmware bool, latestFirmware string) *NetworkConfig {
	this := NetworkConfig{}
	this.Dhcp = dhcp
	this.Hostname = hostname
	this.Ipaddr = ipaddr
	this.Netmask = netmask
	this.Gateway = gateway
	this.Dns = dns
	this.HttpPort = httpPort
	this.User = user
	this.Password = password
	this.DefaultAuth = defaultAuth
	this.FusionEnable = fusionEnable
	this.WifiAPLock = wifiAPLock
	this.WifiEnable = wifiEnable
	this.Ssid = ssid
	this.WifiAP = wifiAP
	this.EmailEnable = emailEnable
	this.SmtpPort = smtpPort
	this.SmtpServer = smtpServer
	this.EmailFrom = emailFrom
	this.EmailTo = emailTo
	this.ReEmail = reEmail
	this.EmailAuth = emailAuth
	this.EmailUser = emailUser
	this.EmailPassword = emailPassword
	this.UpdateFirmware = updateFirmware
	this.LatestFirmware = latestFirmware
	return &this
}

// NewNetworkConfigWithDefaults instantiates a new NetworkConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkConfigWithDefaults() *NetworkConfig {
	this := NetworkConfig{}
	return &this
}

// GetDhcp returns the Dhcp field value
func (o *NetworkConfig) GetDhcp() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Dhcp
}

// GetDhcpOk returns a tuple with the Dhcp field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetDhcpOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dhcp, true
}

// SetDhcp sets field value
func (o *NetworkConfig) SetDhcp(v bool) {
	o.Dhcp = v
}

// GetHostname returns the Hostname field value
func (o *NetworkConfig) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *NetworkConfig) SetHostname(v string) {
	o.Hostname = v
}

// GetIpaddr returns the Ipaddr field value
func (o *NetworkConfig) GetIpaddr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ipaddr
}

// GetIpaddrOk returns a tuple with the Ipaddr field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetIpaddrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipaddr, true
}

// SetIpaddr sets field value
func (o *NetworkConfig) SetIpaddr(v string) {
	o.Ipaddr = v
}

// GetNetmask returns the Netmask field value
func (o *NetworkConfig) GetNetmask() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Netmask
}

// GetNetmaskOk returns a tuple with the Netmask field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetNetmaskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Netmask, true
}

// SetNetmask sets field value
func (o *NetworkConfig) SetNetmask(v string) {
	o.Netmask = v
}

// GetGateway returns the Gateway field value
func (o *NetworkConfig) GetGateway() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Gateway, true
}

// SetGateway sets field value
func (o *NetworkConfig) SetGateway(v string) {
	o.Gateway = v
}

// GetDns returns the Dns field value
func (o *NetworkConfig) GetDns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Dns
}

// GetDnsOk returns a tuple with the Dns field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetDnsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dns, true
}

// SetDns sets field value
func (o *NetworkConfig) SetDns(v []string) {
	o.Dns = v
}

// GetHttpPort returns the HttpPort field value
func (o *NetworkConfig) GetHttpPort() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.HttpPort
}

// GetHttpPortOk returns a tuple with the HttpPort field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetHttpPortOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpPort, true
}

// SetHttpPort sets field value
func (o *NetworkConfig) SetHttpPort(v float32) {
	o.HttpPort = v
}

// GetUser returns the User field value
func (o *NetworkConfig) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *NetworkConfig) SetUser(v string) {
	o.User = v
}

// GetPassword returns the Password field value
func (o *NetworkConfig) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *NetworkConfig) SetPassword(v string) {
	o.Password = v
}

// GetDefaultAuth returns the DefaultAuth field value
func (o *NetworkConfig) GetDefaultAuth() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultAuth
}

// GetDefaultAuthOk returns a tuple with the DefaultAuth field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetDefaultAuthOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultAuth, true
}

// SetDefaultAuth sets field value
func (o *NetworkConfig) SetDefaultAuth(v bool) {
	o.DefaultAuth = v
}

// GetFusionEnable returns the FusionEnable field value
func (o *NetworkConfig) GetFusionEnable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.FusionEnable
}

// GetFusionEnableOk returns a tuple with the FusionEnable field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetFusionEnableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FusionEnable, true
}

// SetFusionEnable sets field value
func (o *NetworkConfig) SetFusionEnable(v bool) {
	o.FusionEnable = v
}

// GetWifiAPLock returns the WifiAPLock field value
func (o *NetworkConfig) GetWifiAPLock() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WifiAPLock
}

// GetWifiAPLockOk returns a tuple with the WifiAPLock field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetWifiAPLockOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WifiAPLock, true
}

// SetWifiAPLock sets field value
func (o *NetworkConfig) SetWifiAPLock(v bool) {
	o.WifiAPLock = v
}

// GetWifiEnable returns the WifiEnable field value
func (o *NetworkConfig) GetWifiEnable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WifiEnable
}

// GetWifiEnableOk returns a tuple with the WifiEnable field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetWifiEnableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WifiEnable, true
}

// SetWifiEnable sets field value
func (o *NetworkConfig) SetWifiEnable(v bool) {
	o.WifiEnable = v
}

// GetSsid returns the Ssid field value
func (o *NetworkConfig) GetSsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetSsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ssid, true
}

// SetSsid sets field value
func (o *NetworkConfig) SetSsid(v string) {
	o.Ssid = v
}

// GetWifiAP returns the WifiAP field value
func (o *NetworkConfig) GetWifiAP() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WifiAP
}

// GetWifiAPOk returns a tuple with the WifiAP field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetWifiAPOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WifiAP, true
}

// SetWifiAP sets field value
func (o *NetworkConfig) SetWifiAP(v bool) {
	o.WifiAP = v
}

// GetEmailEnable returns the EmailEnable field value
func (o *NetworkConfig) GetEmailEnable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EmailEnable
}

// GetEmailEnableOk returns a tuple with the EmailEnable field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetEmailEnableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailEnable, true
}

// SetEmailEnable sets field value
func (o *NetworkConfig) SetEmailEnable(v bool) {
	o.EmailEnable = v
}

// GetSmtpPort returns the SmtpPort field value
func (o *NetworkConfig) GetSmtpPort() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SmtpPort
}

// GetSmtpPortOk returns a tuple with the SmtpPort field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetSmtpPortOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmtpPort, true
}

// SetSmtpPort sets field value
func (o *NetworkConfig) SetSmtpPort(v float32) {
	o.SmtpPort = v
}

// GetSmtpServer returns the SmtpServer field value
func (o *NetworkConfig) GetSmtpServer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SmtpServer
}

// GetSmtpServerOk returns a tuple with the SmtpServer field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetSmtpServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmtpServer, true
}

// SetSmtpServer sets field value
func (o *NetworkConfig) SetSmtpServer(v string) {
	o.SmtpServer = v
}

// GetEmailFrom returns the EmailFrom field value
func (o *NetworkConfig) GetEmailFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailFrom
}

// GetEmailFromOk returns a tuple with the EmailFrom field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetEmailFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailFrom, true
}

// SetEmailFrom sets field value
func (o *NetworkConfig) SetEmailFrom(v string) {
	o.EmailFrom = v
}

// GetEmailTo returns the EmailTo field value
func (o *NetworkConfig) GetEmailTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailTo
}

// GetEmailToOk returns a tuple with the EmailTo field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetEmailToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailTo, true
}

// SetEmailTo sets field value
func (o *NetworkConfig) SetEmailTo(v string) {
	o.EmailTo = v
}

// GetReEmail returns the ReEmail field value
func (o *NetworkConfig) GetReEmail() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ReEmail
}

// GetReEmailOk returns a tuple with the ReEmail field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetReEmailOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReEmail, true
}

// SetReEmail sets field value
func (o *NetworkConfig) SetReEmail(v float32) {
	o.ReEmail = v
}

// GetEmailAuth returns the EmailAuth field value
func (o *NetworkConfig) GetEmailAuth() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EmailAuth
}

// GetEmailAuthOk returns a tuple with the EmailAuth field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetEmailAuthOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailAuth, true
}

// SetEmailAuth sets field value
func (o *NetworkConfig) SetEmailAuth(v bool) {
	o.EmailAuth = v
}

// GetEmailUser returns the EmailUser field value
func (o *NetworkConfig) GetEmailUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailUser
}

// GetEmailUserOk returns a tuple with the EmailUser field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetEmailUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailUser, true
}

// SetEmailUser sets field value
func (o *NetworkConfig) SetEmailUser(v string) {
	o.EmailUser = v
}

// GetEmailPassword returns the EmailPassword field value
func (o *NetworkConfig) GetEmailPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EmailPassword
}

// GetEmailPasswordOk returns a tuple with the EmailPassword field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetEmailPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EmailPassword, true
}

// SetEmailPassword sets field value
func (o *NetworkConfig) SetEmailPassword(v string) {
	o.EmailPassword = v
}

// GetUpdateFirmware returns the UpdateFirmware field value
func (o *NetworkConfig) GetUpdateFirmware() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UpdateFirmware
}

// GetUpdateFirmwareOk returns a tuple with the UpdateFirmware field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetUpdateFirmwareOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdateFirmware, true
}

// SetUpdateFirmware sets field value
func (o *NetworkConfig) SetUpdateFirmware(v bool) {
	o.UpdateFirmware = v
}

// GetLatestFirmware returns the LatestFirmware field value
func (o *NetworkConfig) GetLatestFirmware() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LatestFirmware
}

// GetLatestFirmwareOk returns a tuple with the LatestFirmware field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetLatestFirmwareOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestFirmware, true
}

// SetLatestFirmware sets field value
func (o *NetworkConfig) SetLatestFirmware(v string) {
	o.LatestFirmware = v
}

func (o NetworkConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["dhcp"] = o.Dhcp
	}
	if true {
		toSerialize["hostname"] = o.Hostname
	}
	if true {
		toSerialize["ipaddr"] = o.Ipaddr
	}
	if true {
		toSerialize["netmask"] = o.Netmask
	}
	if true {
		toSerialize["gateway"] = o.Gateway
	}
	if true {
		toSerialize["dns"] = o.Dns
	}
	if true {
		toSerialize["httpPort"] = o.HttpPort
	}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["defaultAuth"] = o.DefaultAuth
	}
	if true {
		toSerialize["fusionEnable"] = o.FusionEnable
	}
	if true {
		toSerialize["wifiAPLock"] = o.WifiAPLock
	}
	if true {
		toSerialize["wifiEnable"] = o.WifiEnable
	}
	if true {
		toSerialize["ssid"] = o.Ssid
	}
	if true {
		toSerialize["wifiAP"] = o.WifiAP
	}
	if true {
		toSerialize["emailEnable"] = o.EmailEnable
	}
	if true {
		toSerialize["smtpPort"] = o.SmtpPort
	}
	if true {
		toSerialize["smtpServer"] = o.SmtpServer
	}
	if true {
		toSerialize["emailFrom"] = o.EmailFrom
	}
	if true {
		toSerialize["emailTo"] = o.EmailTo
	}
	if true {
		toSerialize["reEmail"] = o.ReEmail
	}
	if true {
		toSerialize["emailAuth"] = o.EmailAuth
	}
	if true {
		toSerialize["emailUser"] = o.EmailUser
	}
	if true {
		toSerialize["emailPassword"] = o.EmailPassword
	}
	if true {
		toSerialize["updateFirmware"] = o.UpdateFirmware
	}
	if true {
		toSerialize["latestFirmware"] = o.LatestFirmware
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkConfig struct {
	value *NetworkConfig
	isSet bool
}

func (v NullableNetworkConfig) Get() *NetworkConfig {
	return v.value
}

func (v *NullableNetworkConfig) Set(val *NetworkConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkConfig(val *NetworkConfig) *NullableNetworkConfig {
	return &NullableNetworkConfig{value: val, isSet: true}
}

func (v NullableNetworkConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
