/*
Apex Private API

Private (authenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"
)

// OutputConfig struct for OutputConfig
type OutputConfig struct {
	Name  string                            `json:"name"`
	Icon  string                            `json:"icon"`
	Ctype string                            `json:"ctype"`
	Log   bool                              `json:"log"`
	Type  string                            `json:"type"`
	Did   string                            `json:"did"`
	Gid   string                            `json:"gid"`
	Gtype string                            `json:"gtype"`
	ID    string                            `json:"ID"`
	Prog  string                            `json:"prog"`
	Extra map[string]map[string]interface{} `json:"extra"`
}

// NewOutputConfig instantiates a new OutputConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputConfig(name string, icon string, ctype string, log bool, type_ string, did string, gid string, gtype string, iD string, prog string, extra map[string]map[string]interface{}) *OutputConfig {
	this := OutputConfig{}
	this.Name = name
	this.Icon = icon
	this.Ctype = ctype
	this.Log = log
	this.Type = type_
	this.Did = did
	this.Gid = gid
	this.Gtype = gtype
	this.ID = iD
	this.Prog = prog
	this.Extra = extra
	return &this
}

// NewOutputConfigWithDefaults instantiates a new OutputConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputConfigWithDefaults() *OutputConfig {
	this := OutputConfig{}
	return &this
}

// GetName returns the Name field value
func (o *OutputConfig) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OutputConfig) SetName(v string) {
	o.Name = v
}

// GetIcon returns the Icon field value
func (o *OutputConfig) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *OutputConfig) SetIcon(v string) {
	o.Icon = v
}

// GetCtype returns the Ctype field value
func (o *OutputConfig) GetCtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ctype
}

// GetCtypeOk returns a tuple with the Ctype field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetCtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ctype, true
}

// SetCtype sets field value
func (o *OutputConfig) SetCtype(v string) {
	o.Ctype = v
}

// GetLog returns the Log field value
func (o *OutputConfig) GetLog() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Log
}

// GetLogOk returns a tuple with the Log field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetLogOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Log, true
}

// SetLog sets field value
func (o *OutputConfig) SetLog(v bool) {
	o.Log = v
}

// GetType returns the Type field value
func (o *OutputConfig) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OutputConfig) SetType(v string) {
	o.Type = v
}

// GetDid returns the Did field value
func (o *OutputConfig) GetDid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Did
}

// GetDidOk returns a tuple with the Did field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetDidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Did, true
}

// SetDid sets field value
func (o *OutputConfig) SetDid(v string) {
	o.Did = v
}

// GetGid returns the Gid field value
func (o *OutputConfig) GetGid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Gid
}

// GetGidOk returns a tuple with the Gid field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetGidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Gid, true
}

// SetGid sets field value
func (o *OutputConfig) SetGid(v string) {
	o.Gid = v
}

// GetGtype returns the Gtype field value
func (o *OutputConfig) GetGtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Gtype
}

// GetGtypeOk returns a tuple with the Gtype field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetGtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Gtype, true
}

// SetGtype sets field value
func (o *OutputConfig) SetGtype(v string) {
	o.Gtype = v
}

// GetID returns the ID field value
func (o *OutputConfig) GetID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ID
}

// GetIDOk returns a tuple with the ID field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ID, true
}

// SetID sets field value
func (o *OutputConfig) SetID(v string) {
	o.ID = v
}

// GetProg returns the Prog field value
func (o *OutputConfig) GetProg() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Prog
}

// GetProgOk returns a tuple with the Prog field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetProgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prog, true
}

// SetProg sets field value
func (o *OutputConfig) SetProg(v string) {
	o.Prog = v
}

// GetExtra returns the Extra field value
func (o *OutputConfig) GetExtra() map[string]map[string]interface{} {
	if o == nil {
		var ret map[string]map[string]interface{}
		return ret
	}

	return o.Extra
}

// GetExtraOk returns a tuple with the Extra field value
// and a boolean to check if the value has been set.
func (o *OutputConfig) GetExtraOk() (*map[string]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Extra, true
}

// SetExtra sets field value
func (o *OutputConfig) SetExtra(v map[string]map[string]interface{}) {
	o.Extra = v
}

func (o OutputConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["icon"] = o.Icon
	}
	if true {
		toSerialize["ctype"] = o.Ctype
	}
	if true {
		toSerialize["log"] = o.Log
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["did"] = o.Did
	}
	if true {
		toSerialize["gid"] = o.Gid
	}
	if true {
		toSerialize["gtype"] = o.Gtype
	}
	if true {
		toSerialize["ID"] = o.ID
	}
	if true {
		toSerialize["prog"] = o.Prog
	}
	if true {
		toSerialize["extra"] = o.Extra
	}
	return json.Marshal(toSerialize)
}

type NullableOutputConfig struct {
	value *OutputConfig
	isSet bool
}

func (v NullableOutputConfig) Get() *OutputConfig {
	return v.value
}

func (v *NullableOutputConfig) Set(val *OutputConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputConfig(val *OutputConfig) *NullableOutputConfig {
	return &NullableOutputConfig{value: val, isSet: true}
}

func (v NullableOutputConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
