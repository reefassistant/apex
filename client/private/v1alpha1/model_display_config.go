/*
Apex Private API

Private (authenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1alpha1

import (
	"encoding/json"
)

// DisplayConfig struct for DisplayConfig
type DisplayConfig struct {
	Page        float32   `json:"page"`
	LineEnables []bool    `json:"lineEnables"`
	Probes      []string  `json:"probes"`
	Outpus      *[]string `json:"outpus,omitempty"`
}

// NewDisplayConfig instantiates a new DisplayConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisplayConfig(page float32, lineEnables []bool, probes []string) *DisplayConfig {
	this := DisplayConfig{}
	this.Page = page
	this.LineEnables = lineEnables
	this.Probes = probes
	return &this
}

// NewDisplayConfigWithDefaults instantiates a new DisplayConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisplayConfigWithDefaults() *DisplayConfig {
	this := DisplayConfig{}
	return &this
}

// GetPage returns the Page field value
func (o *DisplayConfig) GetPage() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *DisplayConfig) GetPageOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *DisplayConfig) SetPage(v float32) {
	o.Page = v
}

// GetLineEnables returns the LineEnables field value
func (o *DisplayConfig) GetLineEnables() []bool {
	if o == nil {
		var ret []bool
		return ret
	}

	return o.LineEnables
}

// GetLineEnablesOk returns a tuple with the LineEnables field value
// and a boolean to check if the value has been set.
func (o *DisplayConfig) GetLineEnablesOk() (*[]bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LineEnables, true
}

// SetLineEnables sets field value
func (o *DisplayConfig) SetLineEnables(v []bool) {
	o.LineEnables = v
}

// GetProbes returns the Probes field value
func (o *DisplayConfig) GetProbes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Probes
}

// GetProbesOk returns a tuple with the Probes field value
// and a boolean to check if the value has been set.
func (o *DisplayConfig) GetProbesOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Probes, true
}

// SetProbes sets field value
func (o *DisplayConfig) SetProbes(v []string) {
	o.Probes = v
}

// GetOutpus returns the Outpus field value if set, zero value otherwise.
func (o *DisplayConfig) GetOutpus() []string {
	if o == nil || o.Outpus == nil {
		var ret []string
		return ret
	}
	return *o.Outpus
}

// GetOutpusOk returns a tuple with the Outpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisplayConfig) GetOutpusOk() (*[]string, bool) {
	if o == nil || o.Outpus == nil {
		return nil, false
	}
	return o.Outpus, true
}

// HasOutpus returns a boolean if a field has been set.
func (o *DisplayConfig) HasOutpus() bool {
	if o != nil && o.Outpus != nil {
		return true
	}

	return false
}

// SetOutpus gets a reference to the given []string and assigns it to the Outpus field.
func (o *DisplayConfig) SetOutpus(v []string) {
	o.Outpus = &v
}

func (o DisplayConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["page"] = o.Page
	}
	if true {
		toSerialize["lineEnables"] = o.LineEnables
	}
	if true {
		toSerialize["probes"] = o.Probes
	}
	if o.Outpus != nil {
		toSerialize["outpus"] = o.Outpus
	}
	return json.Marshal(toSerialize)
}

type NullableDisplayConfig struct {
	value *DisplayConfig
	isSet bool
}

func (v NullableDisplayConfig) Get() *DisplayConfig {
	return v.value
}

func (v *NullableDisplayConfig) Set(val *DisplayConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDisplayConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDisplayConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisplayConfig(val *DisplayConfig) *NullableDisplayConfig {
	return &NullableDisplayConfig{value: val, isSet: true}
}

func (v NullableDisplayConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisplayConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
