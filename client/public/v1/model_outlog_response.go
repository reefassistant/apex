/*
Apex Public API

Public (unauthenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// OutlogResponse struct for OutlogResponse
type OutlogResponse struct {
	Olog OutlogContainer `json:"olog"`
}

// NewOutlogResponse instantiates a new OutlogResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutlogResponse(olog OutlogContainer) *OutlogResponse {
	this := OutlogResponse{}
	this.Olog = olog
	return &this
}

// NewOutlogResponseWithDefaults instantiates a new OutlogResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutlogResponseWithDefaults() *OutlogResponse {
	this := OutlogResponse{}
	return &this
}

// GetOlog returns the Olog field value
func (o *OutlogResponse) GetOlog() OutlogContainer {
	if o == nil {
		var ret OutlogContainer
		return ret
	}

	return o.Olog
}

// GetOlogOk returns a tuple with the Olog field value
// and a boolean to check if the value has been set.
func (o *OutlogResponse) GetOlogOk() (*OutlogContainer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Olog, true
}

// SetOlog sets field value
func (o *OutlogResponse) SetOlog(v OutlogContainer) {
	o.Olog = v
}

func (o OutlogResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["olog"] = o.Olog
	}
	return json.Marshal(toSerialize)
}

type NullableOutlogResponse struct {
	value *OutlogResponse
	isSet bool
}

func (v NullableOutlogResponse) Get() *OutlogResponse {
	return v.value
}

func (v *NullableOutlogResponse) Set(val *OutlogResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOutlogResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOutlogResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutlogResponse(val *OutlogResponse) *NullableOutlogResponse {
	return &NullableOutlogResponse{value: val, isSet: true}
}

func (v NullableOutlogResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutlogResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
