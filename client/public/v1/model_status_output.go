/*
Apex Public API

Public (unauthenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// StatusOutput struct for StatusOutput
type StatusOutput struct {
	// status
	Status []string `json:"status"`
	// name
	Name string `json:"name"`
	// gid
	Gid string `json:"gid"`
	// type
	Type string `json:"type"`
	// ID
	ID float32 `json:"ID"`
	// did
	Did string `json:"did"`
	// intensity (optional)
	Intensity *float32 `json:"intensity,omitempty"`
}

// NewStatusOutput instantiates a new StatusOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusOutput(status []string, name string, gid string, type_ string, iD float32, did string) *StatusOutput {
	this := StatusOutput{}
	this.Status = status
	this.Name = name
	this.Gid = gid
	this.Type = type_
	this.ID = iD
	this.Did = did
	return &this
}

// NewStatusOutputWithDefaults instantiates a new StatusOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusOutputWithDefaults() *StatusOutput {
	this := StatusOutput{}
	return &this
}

// GetStatus returns the Status field value
func (o *StatusOutput) GetStatus() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *StatusOutput) GetStatusOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *StatusOutput) SetStatus(v []string) {
	o.Status = v
}

// GetName returns the Name field value
func (o *StatusOutput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StatusOutput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StatusOutput) SetName(v string) {
	o.Name = v
}

// GetGid returns the Gid field value
func (o *StatusOutput) GetGid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Gid
}

// GetGidOk returns a tuple with the Gid field value
// and a boolean to check if the value has been set.
func (o *StatusOutput) GetGidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Gid, true
}

// SetGid sets field value
func (o *StatusOutput) SetGid(v string) {
	o.Gid = v
}

// GetType returns the Type field value
func (o *StatusOutput) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *StatusOutput) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *StatusOutput) SetType(v string) {
	o.Type = v
}

// GetID returns the ID field value
func (o *StatusOutput) GetID() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ID
}

// GetIDOk returns a tuple with the ID field value
// and a boolean to check if the value has been set.
func (o *StatusOutput) GetIDOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ID, true
}

// SetID sets field value
func (o *StatusOutput) SetID(v float32) {
	o.ID = v
}

// GetDid returns the Did field value
func (o *StatusOutput) GetDid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Did
}

// GetDidOk returns a tuple with the Did field value
// and a boolean to check if the value has been set.
func (o *StatusOutput) GetDidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Did, true
}

// SetDid sets field value
func (o *StatusOutput) SetDid(v string) {
	o.Did = v
}

// GetIntensity returns the Intensity field value if set, zero value otherwise.
func (o *StatusOutput) GetIntensity() float32 {
	if o == nil || o.Intensity == nil {
		var ret float32
		return ret
	}
	return *o.Intensity
}

// GetIntensityOk returns a tuple with the Intensity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusOutput) GetIntensityOk() (*float32, bool) {
	if o == nil || o.Intensity == nil {
		return nil, false
	}
	return o.Intensity, true
}

// HasIntensity returns a boolean if a field has been set.
func (o *StatusOutput) HasIntensity() bool {
	if o != nil && o.Intensity != nil {
		return true
	}

	return false
}

// SetIntensity gets a reference to the given float32 and assigns it to the Intensity field.
func (o *StatusOutput) SetIntensity(v float32) {
	o.Intensity = &v
}

func (o StatusOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["gid"] = o.Gid
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["ID"] = o.ID
	}
	if true {
		toSerialize["did"] = o.Did
	}
	if o.Intensity != nil {
		toSerialize["intensity"] = o.Intensity
	}
	return json.Marshal(toSerialize)
}

type NullableStatusOutput struct {
	value *StatusOutput
	isSet bool
}

func (v NullableStatusOutput) Get() *StatusOutput {
	return v.value
}

func (v *NullableStatusOutput) Set(val *StatusOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusOutput(val *StatusOutput) *NullableStatusOutput {
	return &NullableStatusOutput{value: val, isSet: true}
}

func (v NullableStatusOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
