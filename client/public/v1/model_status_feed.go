/*
Apex Public API

Public (unauthenticated) API to integrate with your local Apex aquarium controller (AOS 5 compatible).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package v1

import (
	"encoding/json"
)

// StatusFeed struct for StatusFeed
type StatusFeed struct {
	// Feed cycle (A=1, B=2, ...)
	Name int32 `json:"name"`
	// seconds left for active feed cycle
	Active int32 `json:"active"`
}

// NewStatusFeed instantiates a new StatusFeed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusFeed(name int32, active int32) *StatusFeed {
	this := StatusFeed{}
	this.Name = name
	this.Active = active
	return &this
}

// NewStatusFeedWithDefaults instantiates a new StatusFeed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusFeedWithDefaults() *StatusFeed {
	this := StatusFeed{}
	return &this
}

// GetName returns the Name field value
func (o *StatusFeed) GetName() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StatusFeed) GetNameOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StatusFeed) SetName(v int32) {
	o.Name = v
}

// GetActive returns the Active field value
func (o *StatusFeed) GetActive() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *StatusFeed) GetActiveOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *StatusFeed) SetActive(v int32) {
	o.Active = v
}

func (o StatusFeed) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["active"] = o.Active
	}
	return json.Marshal(toSerialize)
}

type NullableStatusFeed struct {
	value *StatusFeed
	isSet bool
}

func (v NullableStatusFeed) Get() *StatusFeed {
	return v.value
}

func (v *NullableStatusFeed) Set(val *StatusFeed) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusFeed) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusFeed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusFeed(val *StatusFeed) *NullableStatusFeed {
	return &NullableStatusFeed{value: val, isSet: true}
}

func (v NullableStatusFeed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusFeed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
